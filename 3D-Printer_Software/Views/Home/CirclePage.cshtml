@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model CircleShape
@{
    ViewData["Title"] = "Circle Page";
}

<h2>Circle Page</h2>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
}

<form method="post" action="@Url.Action("CirclePage", "Home")">
    <div class="form-group">
        <label for="radius">Radius:</label>
        <input type="text" name="radius" class="form-control" value="@Model.Radius" />
        @Html.ValidationMessageFor(model => model.Radius)
    </div>
    <div class="form-group">
        <label for="centerX">Center X:</label>
        <input type="text" name="centerX" class="form-control" value="@Model.CenterX" />
        @Html.ValidationMessageFor(model => model.CenterX)
    </div>
    <br/>
    <div class="form-group">
        <label for="centerY">Center Y:</label>
        <input type="text" name="centerY" class="form-control" value="@Model.CenterY" />
        @Html.ValidationMessageFor(model => model.CenterY)
    </div>
    <br/><br/>
    <button type="submit" class="btn btn-primary">Calculate Perimeter & required Liquid</button>
</form>

@if (Model.Perimeter.HasValue)
{
    <div class="mt-3">
        <h2>Perimeter: @Model.Perimeter cm</h2>
        <h3> Assumption: we will be using a liquid material that requires 1.5cm of material per 1 cm of perimeter</h3>
        <h2>Required Liquid : @Model.Liqued cm of material</h2>
        
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
