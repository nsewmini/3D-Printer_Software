@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}


@model TriangleShape
@{
    ViewData["Title"] = "Triangle Page";
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
}
<h1>Triangle Page</h1>

<form method="post" action="@Url.Action("TrianglePage", "Home")">
    <div class="form-group">
        <label for="side1">Side 1:</label>
        <input type="number" name="side1" id="side1" class="form-control" value="@Model.Side1" />
        @Html.ValidationMessageFor(model => model.Side1)
    </div>
    <div class="form-group">
        <label for="side2">Side 2:</label>
        <input type="number" name="side2" id="side2" class="form-control" value="@Model.Side2" />
        @Html.ValidationMessageFor(model => model.Side2)
    </div>
    <div class="form-group">
        <label for="side3">Side 3:</label>
        <input type="number" name="side3" id="side3" class="form-control" value="@Model.Side3" />
        @Html.ValidationMessageFor(model => model.Side3)
    </div>
    <button type="submit" class="btn btn-primary">Calculate Perimeter & required Liquid</button>
</form>

@if (Model.Perimeter.HasValue)
{
    <div class="mt-3">
        <h2>Perimeter: @Model.Perimeter cm</h2>
        <h3> Assumption: we will be using a liquid material that requires 1.5cm of material per 1 cm of perimeter</h3>
        <h2>Required Liquid : @Model.Liqued cm of material</h2>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
